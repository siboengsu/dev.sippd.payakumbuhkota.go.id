-- WEBUSER
IF COL_LENGTH('dbo.WEBUSER', 'PHPPWD') IS NOT NULL
BEGIN
ALTER TABLE dbo.WEBUSER DROP COLUMN PHPPWD
END
ALTER TABLE dbo.WEBUSER ADD PHPPWD VARCHAR(200)
GO
UPDATE WEBUSER SET PHPPWD = '$2y$08$sBzPhwA4OAvPziMHpGJdKOfMJtW5iJAAwGSuTKVkPjaq99/kKx9su' -- 12345
GO

-- PRARASKDETR
IF COL_LENGTH('dbo.PRARASKDETR', 'KDSSH') IS NOT NULL
BEGIN
	DECLARE @RES VARCHAR(MAX), @TABLE VARCHAR(MAX), @COLUMN VARCHAR(MAX)
	SET @TABLE = 'PRARASKDETR'
	SET @COLUMN = 'KDSSH'
	SET @RES = (SELECT DF.NAME FROM SYS.DEFAULT_CONSTRAINTS DF INNER JOIN SYS.TABLES T ON DF.PARENT_OBJECT_ID = T.OBJECT_ID INNER JOIN SYS.COLUMNS C ON C.OBJECT_ID = DF.PARENT_OBJECT_ID AND DF.PARENT_COLUMN_ID = C.COLUMN_ID WHERE T.NAME = @TABLE AND C.NAME = @COLUMN)
	IF @RES IS NOT NULL
	BEGIN
	EXEC ('ALTER TABLE ' + @TABLE + ' DROP CONSTRAINT ' + @RES)
	END
ALTER TABLE dbo.PRARASKDETR DROP COLUMN KDSSH
END
ALTER TABLE dbo.PRARASKDETR ADD KDSSH VARCHAR(200) DEFAULT ('') NULL
GO

IF COL_LENGTH('dbo.PRARASKDETR', 'SPEK') IS NOT NULL
BEGIN
	DECLARE @RES VARCHAR(MAX), @TABLE VARCHAR(MAX), @COLUMN VARCHAR(MAX)
	SET @TABLE = 'PRARASKDETR'
	SET @COLUMN = 'SPEK'
	SET @RES = (SELECT DF.NAME FROM SYS.DEFAULT_CONSTRAINTS DF INNER JOIN SYS.TABLES T ON DF.PARENT_OBJECT_ID = T.OBJECT_ID INNER JOIN SYS.COLUMNS C ON C.OBJECT_ID = DF.PARENT_OBJECT_ID AND DF.PARENT_COLUMN_ID = C.COLUMN_ID WHERE T.NAME = @TABLE AND C.NAME = @COLUMN)
	IF @RES IS NOT NULL
	BEGIN
	EXEC ('ALTER TABLE ' + @TABLE + ' DROP CONSTRAINT ' + @RES)
	END
ALTER TABLE dbo.PRARASKDETR DROP COLUMN SPEK
END
ALTER TABLE dbo.PRARASKDETR ADD SPEK TEXT DEFAULT ('') NULL
GO

-- PHP_STR_CUT
IF (OBJECT_ID(N'dbo.PHP_STR_CUT') IS NOT NULL)
BEGIN
DROP FUNCTION dbo.PHP_STR_CUT
END
GO

CREATE FUNCTION dbo.PHP_STR_CUT (@KD VARCHAR(MAX))
RETURNS @TBL TABLE (
	KD VARCHAR(MAX)
)
AS
BEGIN
	DECLARE 
	@LEN INT = 0, 
	@STR VARCHAR(MAX) = ''

	SET @LEN = LEN(@KD)

	WHILE @LEN > 0
	BEGIN
		SET @STR = SUBSTRING(@KD, 1, @LEN)
		INSERT INTO @TBL VALUES (@STR)
		SET @LEN = @LEN - 1
	END

	RETURN
END
GO

-- PHPSESS
IF (OBJECT_ID(N'PHPSESS') IS NOT NULL)
BEGIN
DROP TABLE PHPSESS
END
GO

CREATE TABLE PHPSESS (
	id varchar(200) NOT NULL,
	ip_address varchar(200) NOT NULL,
	[timestamp] int DEFAULT ((0)) NOT NULL,
	[data] text DEFAULT ('') NOT NULL
)
GO
CREATE INDEX PHPSESS_timestamp ON PHPSESS ([timestamp])
GO

-- PHPSET
IF (OBJECT_ID(N'PHPSET') IS NOT NULL)
BEGIN
DROP TABLE PHPSET
END
GO
CREATE TABLE PHPSET (
	PAR varchar(200) NOT NULL,
	VAR varchar(200) NOT NULL
)
GO

-- PHPWEBROLE
IF (OBJECT_ID(N'PHPWEBROLE') IS NOT NULL)
BEGIN
DROP TABLE PHPWEBROLE
END
GO
CREATE TABLE PHPWEBROLE (
	ID_MENU VARCHAR(50) NOT NULL,
	ID_PARE VARCHAR(50) NULL,
	NMMENU VARCHAR(200) NOT NULL,
	KDTAHAP VARCHAR(5) NULL,
	TIPE VARCHAR(5) NOT NULL,
	CONTROLLER VARCHAR(200) NULL,
	CONSTRAINT PK_PHPWEBROLE PRIMARY KEY (ID_MENU)
)
GO
INSERT INTO PHPWEBROLE VALUES
('01', NULL, 'Utama', NULL, 'H', ''),
('0101', '01', ' Pindah Tahap', NULL, 'D', ''),
('02', NULL, 'Daftar', NULL, 'H', ''),
('0201', '02', ' Urusan SOPD', '4', 'D', ''),
('03', NULL, 'Perencanaan SOPD', NULL, 'H', ''),
('0301', '03', ' Renja', NULL, 'H', ''),
('030101', '0301', ' Pengajuan & Pengesahan', NULL, 'D', ''),
('0302', '03', ' Pra RKA', NULL, 'H', ''),
('030201', '0302', ' Belaja Langsung', NULL, 'D', ''),
('09', NULL, 'Laporan', NULL, 'H', ''),
('0901', '09', 'RKPD', NULL, 'H', ''),
('090101', '0901', 'Matrik Renja SOPD', '4', 'D', ''),
('090102', '0901', 'Rekap Per SOPD', '4', 'D', ''),
('090103', '0901', 'Rekap Per Urusan', '4', 'D', ''),
('090104', '0901', 'Pagu Per SOPD', NULL, 'D', ''),
('090105', '0901', 'Pagu Per SOPD Perubahan', '5', 'D', ''),
('0902', '09', 'Pra RKA', NULL, 'H', ''),
('090201', '0902', 'Pra RKA-SKPD 221 Belanja Langsung', '4', 'D', ''),
('090202', '0902', 'Pra RKA-SKPD 221 Belanja Langsung Perubahan', '5', 'D', ''),
('00', NULL, 'Sistem', NULL, 'H', ''),
('0001', '00', 'Hak Akses Group', NULL, 'D', ''),
('0002', '00', 'Verifikasi Pra RKA Non SSH/SB', NULL, 'D', ''),
('0003', '00', 'Password User', NULL, 'D', '')
GO

-- PHPWEBOTOR
IF (OBJECT_ID(N'PHPWEBOTOR') IS NOT NULL)
BEGIN
DROP TABLE PHPWEBOTOR
END
GO
CREATE TABLE PHPWEBOTOR (
	GROUPID VARCHAR(50) NOT NULL,
	ID_MENU VARCHAR(50) NOT NULL,
	CONSTRAINT PK_PHPWEBOTOR PRIMARY KEY (GROUPID, ID_MENU)
)
GO
INSERT INTO PHPWEBOTOR (GROUPID, ID_MENU) VALUES 
('0_', '01'),
('0_', '0101'),
('0_', '02'),
('0_', '0201'),
('0_', '03'),
('0_', '0301'),
('0_', '030101'),
('0_', '0302'),
('0_', '030201'),
('0_', '09'),
('0_', '0901'),
('0_', '090101'),
('0_', '090102'),
('0_', '090103'),
('0_', '090104'),
('0_', '090105'),
('0_', '0902'),
('0_', '090201'),
('0_', '090202'),
('0_', '00'),
('0_', '0001'),
('0_', '0002'),
('0_', '0003')
GO

-- PHPHSPK2
IF (OBJECT_ID(N'PHPHSPK2') IS NOT NULL)
BEGIN
DROP TABLE PHPHSPK2
END
GO
CREATE TABLE PHPHSPK2 (
	KDTAHUN VARCHAR(10) NOT NULL,
	KDHSPK2 VARCHAR(50) NOT NULL,
	HSPK2_NAMA VARCHAR(400) NOT NULL,
	HSPK2_AKTIF INT DEFAULT 1 NOT NULL, -- 0:TIDAK AKTIF | 1:AKTIF
	CONSTRAINT PK_PHPHSPK2 PRIMARY KEY (KDTAHUN, KDHSPK2)
)
GO

-- PHPHSPK3
IF (OBJECT_ID(N'PHPHSPK3') IS NOT NULL)
BEGIN
DROP TABLE PHPHSPK3
END
GO
CREATE TABLE PHPHSPK3 (
	KDTAHUN VARCHAR(10) NOT NULL,
	KDHSPK2 VARCHAR(50) NOT NULL,
	KDHSPK3 VARCHAR(50) NOT NULL,
	HSPK3_NAMA VARCHAR(400) NOT NULL,
	HSPK3_SATUAN VARCHAR(50) NOT NULL,
	HSPK3_HARGA MONEY DEFAULT 0 NOT NULL,
	HSPK3_AKTIF INT DEFAULT 1 NOT NULL, -- 0:TIDAK AKTIF | 1:AKTIF
	CONSTRAINT PK_PHPHSPK3 PRIMARY KEY (KDTAHUN, KDHSPK3)
)
GO

-- PHPSSH
IF (OBJECT_ID(N'PHPSSH') IS NOT NULL)
BEGIN
DROP TABLE PHPSSH
END
GO
CREATE TABLE PHPSSH (
	KDTAHUN VARCHAR(10) NOT NULL,
	KDSSH VARCHAR(50) NOT NULL,
	KDREK VARCHAR(50) NULL,
	SSH_NAMA VARCHAR(400) NULL,
	SSH_SATUAN VARCHAR(50) NULL,
	SSH_HARGA MONEY DEFAULT 0 NOT NULL,
	SSH_SPEK TEXT NULL,
	SSH_AKTIF INT DEFAULT 1 NOT NULL, -- 0:TIDAK AKTIF | 1:AKTIF
	CONSTRAINT PK_PHPSSH PRIMARY KEY (KDTAHUN, KDSSH)
)
GO

-- PHPKEGHSPK
IF (OBJECT_ID(N'PHPKEGHSPK') IS NOT NULL)
BEGIN
DROP TABLE PHPKEGHSPK
END
GO
CREATE TABLE PHPKEGHSPK (
	ID_KEGHSPK INT IDENTITY(1,1) NOT NULL,
	
	KDTAHUN VARCHAR(10) NOT NULL,
	KDTAHAP VARCHAR(10) NOT NULL,
	UNITKEY VARCHAR(10) NOT NULL,
	KEGRKPDKEY VARCHAR(10) NOT NULL,
	
	TIPE INT DEFAULT 0 NOT NULL, -- 1:OPD | 2:MUSRENBANG | 3:POKIR
	
	KDHSPK3 VARCHAR(200) DEFAULT '' NOT NULL,
	NMPEKERJAAN VARCHAR(200) NOT NULL,
	JNPEKERJAAN VARCHAR(200) NOT NULL,
	KECAMATAN VARCHAR(200) NULL,
	KELURAHAN VARCHAR(200) NULL,
	LOKASI TEXT NOT NULL,
	KETERANGAN TEXT NULL,
	VOLUME MONEY DEFAULT 0 NOT NULL,
	SATUAN VARCHAR(50) NOT NULL,
	HARGA MONEY DEFAULT 0 NOT NULL,
	TOTAL MONEY DEFAULT 0 NOT NULL,
	
	REF_ID_USUL VARCHAR(10) NULL,
	REF_KDHSPK3 VARCHAR(200) NULL,
	REF_NMPEKERJAAN VARCHAR(200) NULL,
	REF_JNPEKERJAAN VARCHAR(200) NULL,
	REF_KECAMATAN VARCHAR(200) NULL,
	REF_KELURAHAN VARCHAR(200) NULL,
	REF_LOKASI TEXT NULL,
	REF_KETERANGAN TEXT NULL,
	REF_VOLUME MONEY DEFAULT 0 NULL,
	REF_SATUAN VARCHAR(50) NULL,
	REF_HARGA MONEY DEFAULT 0 NULL,
	REF_TOTAL MONEY DEFAULT 0 NULL,
	
	TGL_UPDATE DATETIME2 DEFAULT GETDATE() NOT NULL,
	TGL_INSERT DATETIME2 DEFAULT GETDATE() NOT NULL
	
	CONSTRAINT PK_PHPKEGHSPK PRIMARY KEY (ID_KEGHSPK)
)
GO

-- PHPKEGHSPK TRIGGER INSERT
IF (OBJECT_ID(N'TI_PHPKEGHSPK') IS NOT NULL)
BEGIN
DROP TRIGGER TI_PHPKEGHSPK
END
GO

CREATE TRIGGER TI_PHPKEGHSPK
ON PHPKEGHSPK
AFTER INSERT 
AS 
BEGIN
	DECLARE
	@numrows INT,
	@numnull INT,
	@errno INT,
	@errmsg VARCHAR(255)

	SELECT @numrows = @@rowcount
	IF @numrows = 0
	RETURN

	/* Check parent "KEGRKPD" */
	IF	UPDATE(UNITKEY) OR
		UPDATE(KDTAHAP) OR
		UPDATE(KDTAHUN) OR
		UPDATE(KEGRKPDKEY)
	BEGIN
		IF (SELECT COUNT(*)
		FROM KEGRKPD t1, inserted t2
		WHERE 
			t1.UNITKEY = t2.UNITKEY
		AND t1.KDTAHUN = t2.KDTAHUN
		AND t1.KDTAHAP = t2.KDTAHAP
		AND t1.KEGRKPDKEY = t2.KEGRKPDKEY) != @numrows
		BEGIN
			SELECT	@errno = 50002,
					@errmsg = 'Parent does not exist in "KEGRKPD". Cannot create child in "PHPKEGHSPK".'
			GOTO error
		END
	END
	
	/* Check parent "TAHUN" */
	IF UPDATE(KDTAHUN)
	BEGIN
	IF (SELECT COUNT(*)
		FROM TAHUN t1, inserted t2
		WHERE t1.KDTAHUN = t2.KDTAHUN) != @numrows
		BEGIN
			SELECT	@errno = 50002,
					@errmsg = 'Parent does not exist in "TAHUN". Cannot create child in "PHPKEGHSPK".'
			GOTO error
		END
	END
	
	/* Check parent "TAHAP" */
	IF UPDATE(KDTAHAP)
	BEGIN
	IF (SELECT COUNT(*)
		FROM TAHAP t1, inserted t2
		WHERE t1.KDTAHAP = t2.KDTAHAP) != @numrows
		BEGIN
			SELECT	@errno = 50002,
					@errmsg = 'Parent does not exist in "TAHAP". Cannot create child in "PHPKEGHSPK".'
			GOTO error
		END
	END

	RETURN
	
	/* ERRORS HANDLING */
	error:
		RAISERROR @errno @errmsg
		ROLLBACK TRANSACTION
END
GO

-- PHPKEGHSPK TRIGGER UPDATE
IF (OBJECT_ID(N'TU_PHPKEGHSPK') IS NOT NULL)
BEGIN
DROP TRIGGER TU_PHPKEGHSPK
END
GO

CREATE TRIGGER TU_PHPKEGHSPK
ON PHPKEGHSPK
AFTER UPDATE
AS
BEGIN
	DECLARE
	@numrows INT,
	@numnull INT,
	@errno INT,
	@errmsg VARCHAR(255)

	SELECT @numrows = @@rowcount
	IF @numrows = 0
		RETURN
	
	/* Check parent "KEGRKPD" */
	IF	UPDATE(UNITKEY) OR
		UPDATE(KDTAHAP) OR
		UPDATE(KDTAHUN) OR
		UPDATE(KEGRKPDKEY)
	BEGIN
		IF (SELECT COUNT(*)
			FROM KEGRKPD t1, inserted t2
			WHERE 
				t1.UNITKEY = t2.UNITKEY
			AND t1.KDTAHAP = t2.KDTAHAP
			AND t1.KDTAHUN = t2.KDTAHUN
			AND t1.KEGRKPDKEY = t2.KEGRKPDKEY) != @numrows
			BEGIN
			SELECT	@errno = 50003,
					@errmsg = 'KEGRKPD" does not exist. Cannot modify child in "PHPKEGHSPK".'
			GOTO error
			END
	END
	
	/* Check parent "TAHUN" */
	IF UPDATE(KDTAHUN)
	BEGIN
	IF (SELECT COUNT(*)
		FROM TAHUN t1, inserted t2
		WHERE t1.KDTAHUN = t2.KDTAHUN) != @numrows
		BEGIN
			SELECT	@errno = 50002,
					@errmsg = 'Parent does not exist in "TAHUN". Cannot create child in "PHPKEGHSPK".'
			GOTO error
		END
	END
	
	/* Check parent "TAHAP" */
	IF UPDATE(KDTAHAP)
	BEGIN
	IF (SELECT COUNT(*)
		FROM TAHAP t1, inserted t2
		WHERE t1.KDTAHAP = t2.KDTAHAP) != @numrows
		BEGIN
			SELECT	@errno = 50002,
					@errmsg = 'Parent does not exist in "TAHAP". Cannot create child in "PHPKEGHSPK".'
			GOTO error
		END
	END

	RETURN

	/* ERRORS HANDLING */
	error:
		RAISERROR @errno @errmsg
		ROLLBACK TRANSACTION
END
GO